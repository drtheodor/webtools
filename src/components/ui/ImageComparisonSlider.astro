---
interface Props {
    id: string;
    originalSrc: string;
    convertedSrc: string;
}

const { id, originalSrc, convertedSrc } = Astro.props;
---

<div class="relative border rounded-lg overflow-hidden bg-gray-800 border-gray-700 h-96" id={id}>
  <div class="flex">
    <div class="w-1/2 p-2 text-center text-sm font-medium text-gray-300">Original</div>
    <div class="w-1/2 p-2 text-center text-sm font-medium text-gray100">Converted</div>
  </div>
  
  <div class="relative w-full h-[calc(100%-2rem)]">
    <div class="absolute inset-0 overflow-hidden">
      <img 
        id="originalImage"
        src={originalSrc} 
        alt="Original image" 
        class="w-full h-full object-contain"
      />
    </div>
    
    <div 
      id="converted-container"
      class="absolute inset-0 overflow-hidden"
      style="clip-path: inset(0 0 0 50%)"
    >
      <img 
        id="resultImage"
        src={convertedSrc} 
        alt="Converted image" 
        class="w-full h-full object-contain"
      />
    </div>
    
    <!-- Slider handle -->
    <div 
      id="comparison-slider"
      class="absolute top-0 bottom-0 w-1 cursor-col-resize z-10"
      style="left: 50%"
    >
      <div class="absolute -left-3 top-1/2 -translate-y-1/2 w-6 h-6 rounded-full bg-blue-500 border-2 border-gray-900 shadow-lg"></div>
    </div>
  </div>
</div>

<script>
  const slider = document.getElementById('comparison-slider');
  const convertedContainer = document.getElementById('converted-container');
  let isDragging = false;

  slider.addEventListener('mousedown', (e) => {
    isDragging = true;
    e.preventDefault();
  });

  document.addEventListener('mousemove', (e) => {
    if (!isDragging) return;
    
    const containerRect = convertedContainer.parentElement.getBoundingClientRect();
    const x = e.clientX - containerRect.left;
    const percent = Math.max(0, Math.min(100, (x / containerRect.width) * 100));
    
    slider.style.left = `${percent}%`;
    convertedContainer.style.clipPath = `inset(0 0 0 ${percent}%)`;
  });

  document.addEventListener('mouseup', () => {
    isDragging = false;
  });
</script>